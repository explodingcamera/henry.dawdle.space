---
import Layout from "../layouts/Layout.astro";
import { Picture } from "astro:assets";
import { stat } from "node:fs/promises";
import { join } from "node:path";

import type { ImageMetadata } from "astro";

const titles: Record<string, string> = {};

const photos: Record<
  string,
  {
    title: string;
    meta: ImageMetadata;
    createdAt: Date;
  }[]
> = {};

const dirname = new URL(".", import.meta.url).pathname;
const files = import.meta.glob(`../../photos/*/*.+(jpg|jpeg|png|webp|avif)`);

for await (const [filepath, file] of Object.entries(files)) {
  const photo = ((await file()) as any).default as ImageMetadata;
  const stats = await stat(join(dirname, filepath));

  const filename = filepath.split("/").pop() as string;
  const year = filepath.split("/").slice(-2, -1).pop() as string;
  if (!photos[year]) photos[year] = [];

  photos[year].push({
    title: titles[filename] || "",
    meta: photo,
    createdAt: stats.birthtime,
  });
}

for (const year in photos) {
  photos[year].sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());
}
---

<Layout floatingHeader title="Photos">
  <main>
    <div>
      {
        Object.entries(photos)
          .reverse()
          .map(([year, photos]) => (
            <>
              <h2>{year}</h2>
              <>
                {photos.map((photo) => (
                  <figure class="photo">
                    <a href={photo.meta.src} target="_blank">
                      <Picture
                        widths={[800, 1200]}
                        src={photo.meta}
                        decoding="async"
                        quality={90}
                        loading="lazy"
                        formats={["webp"]}
                        alt={photo.title || ""}
                      />
                    </a>
                    <figcaption>
                      <a href={photo.meta.src} download>
                        download
                      </a>
                    </figcaption>
                  </figure>
                ))}
              </>
            </>
          ))
      }

      <p>
        Feel free to use these photos for whatever you want under the terms of
        <a
          href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1"
          target="_blank"
          rel="license noopener noreferrer"
          style="display:inline-block;"
          >CC BY 4.0<img
            style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"
            src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"
          /><img
            style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"
            src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"
          /></a
        >
      </p>
    </div>
  </main>
</Layout>

<style>
  main {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 5rem 2rem;

    > div {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    h2 {
      font-size: 2rem;
      margin-top: 2rem;
    }

    .photo {
      margin: 0;
      position: relative;

      figcaption {
        opacity: 0;
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        color: white;
        padding: 1rem;
        transition: opacity 0.3s;
        display: flex;

        a {
          margin-left: auto;
        }
      }

      &:hover figcaption {
        opacity: 1;
      }

      img {
        width: 60rem;
        max-width: 100%;
        height: auto;
      }
    }
  }
</style>
