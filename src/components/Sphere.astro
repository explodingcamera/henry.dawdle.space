---

---

<canvas id="cube"></canvas>
<script>
  import { WebGLRenderer, PerspectiveCamera, Scene, Color } from "three";
  import { EffectComposer, EffectPass, RenderPass } from "postprocessing";
  import { ASCIIEffect } from "./ascii";
  import { createSphere } from "./sphere";

  const canvas = document.getElementById("cube");
  if (!canvas) {
    console.error("Canvas element not found");
    throw new Error("Canvas element not found");
  }

  const renderer = new WebGLRenderer({
    powerPreference: "low-power",
    antialias: false,
    stencil: false,
    depth: false,
    alpha: true,
    canvas,
  });
  renderer.setClearColor(0x000000, 0);
  renderer.setSize(canvas.clientWidth, canvas.clientHeight, false);

  const camera = new PerspectiveCamera(
    75,
    canvas.clientWidth / canvas.clientHeight,
    0.1,
    1000,
  );
  camera.position.z = 1.9;
  camera.aspect = 1;

  const scene = new Scene();
  const sphere = createSphere();
  scene.add(sphere);

  const composer = new EffectComposer(renderer);
  composer.addPass(new RenderPass(scene, camera));
  composer.addPass(
    new EffectPass(
      camera,
      new ASCIIEffect({
        cellSize: 5,
        color: "#c0f1ea",
        characters: " +**o!:,.",
        fontSize: 50,
      }),
    ),
  );

  let lastTime = 0;
  requestAnimationFrame(function render(time) {
    const timeInSeconds = time * 0.001;
    const deltaTime = timeInSeconds - lastTime;
    lastTime = timeInSeconds;
    sphere.rotation.y += deltaTime * 0.08;
    sphere.rotation.x += deltaTime * 0.02;
    composer.render();
    requestAnimationFrame(render);
  });
</script>

<style>
  canvas {
    width: 35rem;
    max-width: 30vmax;
    aspect-ratio: 1 / 1;
  }
</style>
